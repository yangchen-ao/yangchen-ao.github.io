[{"title":"python基础第三课-分支结构和循环结构","url":"/2022/02/06/python%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%89%E8%AF%BE-%E5%88%86%E6%94%AF%E7%BB%93%E6%9E%84%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/","content":"分支结构单分支if语句单分支结构的语句，形式如下：\nif 条件表达式:\t语句/语句块\n\n其中，条件表达式可以是逻辑表达式、关系表达式、算术表达式等等，例如：\na = 10if a&gt;5:  # 如果a大于5则执行下面的语句\tprint(a)  # 打印变量a\n\n双分支选择结构if-else 双分支结构如下：\nif 条件表达式:\t语句1/语句块1else:\t语句2/语句块2\n\n当if条件不成立，则执行语句块2，否则执行语句块1\n多分支选择结构多分支选择结构的语法格式如下：\nif 条件表达式1:  语句1/语句块1elif 条件表达式2:  语句2/语句块2...elif 条件表达式n:  语句n/语句块n[else:  语句n+1/语句块n+1]\n\n注释：\n\n计算机行业，描述语法格式时，使用中括号[ ]通常表示可选，非必选，多分支结构中最后的 else 是可选的。\n每个分支之间是有自己的逻辑的，不能随意颠倒顺序。\npython不建议if-else嵌套结构，尽量使用if-elif-else的多分支选择结构。\n\n三元条件运算符Python 提供了三元运算符，三元运算符是条件语句中比较简练的一种赋值方式，用来在某些简单双分支赋值情况。三元运算符的语法结构如下：\nA = Y if X else Z\n\n其中如果X为真，那么就执行A=Y，如果X为假，就执行A=Z。\n注：适用于简单的双分支结构。\n循环语句while循环while循环的语法格式如下：\nwhile 条件表达式:\t循环体语句\n\nwhile循环适用于不知道循环次数的循环结构，while循环通过一个能够产生或转换出bool值的条件表达式来控制循环，表达式的值为True则继续循环；表达式的值为False则结束循环。例如：\nn = 1while n&lt;=10:\tprint(n)\tn += 1\n\n可以构造死循环：\nwhile True：\t语句/语句块\n\nfor循环for循环的语法格式如下：\nfor 变量 in 可迭代对象:\t循环体语句\n\nfor 循环用于遍历一个集合，每次循环，会从集合中取得一个元素，并执行一次代码块，直到集合中所有的元素都获取，for 循环才结束。可以遍历对象包括序列(字符串、列表、元组)、字典、迭代器对象(iterator)、生成器函数文件对象。例如：\nfor i in range(10):\tprint(i)  # 打印0-9\n\n特别说明：range()在python3中返回的是一个可迭代对象，而不是整数列表\n\nrange(10)：返回一个0到9的可迭代对象，10为stop参数，到10结束，但不包括10。\nrange(1,11)：返回一个1到10的可迭代对象，1为start参数，默认从0开始。\nrange(1,11,2)返回一个1到10步长为2的可迭代对象，2为step参数，即每次递增的值为2，默认为1。\nrange(11,1,-2)步长为负数，表示每次递减的值为2，从11开始。\n\n遍历字符串，即对每个字符进行操作，例如：\nfor i in &#x27;hello world&#x27;:\tprint(i，end=&#x27;&#x27;) #打印hello world\n\n注意：print函数的end参数为以什么结尾，默认为以换行结尾。\n嵌套循环一个循环体内可以嵌入另一个循环，一般称为“嵌套循环”，或者“多重循环”。例如，利用嵌套循环—-打印九九乘法表：\nfor m in range(1,10): \nfor m in range(1,10): \n    for n in range(1,m+1): \n        print(&quot;&#123;0&#125;*&#123;1&#125;=&#123;2&#125;&quot;.format(m,n,(m*n)),end=&quot;\\t&quot;) \n    print()\n\n在上面的代码中，外层循环用来控制一共会产生9行的输出，而内层循环用来控制每一行会输出多少列。内层循环中的输出就是九九表一行中的所有列，所以在内层循环完成时，有一个print()来实现换行输出的效果。\nbreakbreak 语句可用于 while 和 for 循环，用来结束整个循环。 当有嵌套循环时，break 语句只能跳出最近一层的循环。\nwhile True:     a = input(&quot;请输入一个字符（输入 Q 或 q 结束）&quot;)     if a.upper()==&#x27;Q&#x27;:         print(&quot;循环结束，退出&quot;)         break     else:        print(a)\n\n在上面的代码中，while 循环的条件语句是 True，因此进入 while 循环后，每次都会接收控制台输入的值赋给变量 a，判断 a 的值是否是“q”或者“Q”。当输入的值是“q”或者“Q”时，执行 break 语句退出循环。\ncontinue与 break 语句对应的还有另一个 continue 语句，与 break 语句不同的是，continue 用于结束本次循环，继续下一次。多个循环嵌套时，continue 也是应用于最近的一层循环，而 break 语句用来彻底退出最近的一层循环。\n#for 循环来遍历 10 以内的奇数 for i in range(1,10):     if i%2==0:\t\tcontinue     else:        print(i,end=&#x27;\\t&#x27;)\n\n循环里的else当循环正常结束时，会继续执行else里的代码块，如遇到break(continue不行)强制退出循环，则不执行else里的代码。\ncontinue跳过此次循环，例如：\nsum = 0for i in range(1,10): \tif i == 9:\t\tcontinue\tsum += ielse:\tprint(&#x27;sum&#x27;)  # 计算1-8的和并输出\n\nbreak跳出循环，例如：\nsum = 0for i in range(1,10): \tif i == 9:\t\tcontinue\tsum += ielse:\tprint(&#x27;sum&#x27;)  # 计算1-8的和但不输出\n\nwhile同理。\n","tags":["python基础"]},{"title":"python基础第一课--环境搭建和变量","url":"/2022/02/03/python%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%B8%80%E8%AF%BE-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%92%8C%E5%8F%98%E9%87%8F/","content":"win11搭建python环境下载anaconda安装包\n打开安装包，一路点next就好，更改路径时大家路径里面请不要带中文、空格，否则报错很麻烦。\n然后配置anaconda环境配置：右击桌面选择显示设置，然后在系统关于中找到高级系统设置，然后点击环境变量，\n\n\n\n然后在用户变量中编辑Path，\n\n新建四个路径，\n\n然后在cmd中验证，输入python，\n\n如果跳转到windows应用商店中，你只需把那四条路径上移置顶即可。\n下载Pycharm他家的开发工具非常好用，我们只需下载社区版即可，想要专业版的也可私聊我，下载地址\n\n有了 exe 文件双击打开一路点 next 就可以了，安装完成，打开pycharm，点击New  Project，\n\n然后把 Location 换成自己选择的路径，然后点击红色标注出来三角，然后选择第二个，选择的就是刚刚咱们安装的 anaconda 环境目录中的 python.exe 执行文件，后“create”就好。\n\n然后右击文件，新建 python file，\n\n下表为Pycharm常用快捷键\n\n\n快捷键\n作用\n\n\n\nctrl + /\n注释/反注释代码\n\n\nctrl + alt + l\n格式化代码\n\n\nF2\n快速定位到错误代码\n\n\nalt + enter\n万能代码修复快捷键\n\n\nctrl + j\n显示可用的代码\n\n\nctrl + d / ctrl + y\n复制/删除一行代码\n\n\n变量和类型数据类型：\n整型（int）：整数，支持二进制，八进制，十进制，十六进制的表示法。\n浮点型（float）：小数，也支持科学计数法。\n字符串型（str）：字符串是以单引号或双引号括起来的任意文本。\n布尔型（bool）：只有True，False两种值（注意开头大写）。\n\n不同类型的变量可以相互转换，这一点可以通过Python的内置函数来实现。\n\nint（）：将一个数值或字符串（只含有数字）转换成整数，可以指定进制。\nfloat（）：将一个字符串（只含有数字）或整数转换成浮点数。\nstr()：将指定的对象转换成字符串形式，可以指定编码。\nchr()：将整数转换成该编码对应的字符串（一个字符）。\nord()：将字符串（一个字符）转换成对应的编码（整数）。\n\n对象Python 中，一切皆对象。每个对象由：标识（identity）、类型（type）、value（值）组成。对象的本质就是：一个内存块，拥有特定的值，支持特定类型的相关操作。 \n\n标识用于唯一标识对象，通常对应于对象在计算机内存中的地址。使用内置函数id(obj)可返回对象 obj 的标识。 \n类型用于表示对象存储的“数据”的类型。类型可以限制对象的取值范围以及可执行的操作。可以使用 type(obj)获得对象的所属类型。\n值表示对象所存储的数据的信息。使用 print(obj)可以直接打印出值。\n\n在 Python 中，变量即对象的引用。因为，变量存储的就是对象的地址。变量通过地址引用了“对象”。变量位于栈内存，对象位于堆内存。 \nPython是动态类型，强类型语言：变量不需要显式声明类型，每个对象都有数据类型，只支持该类型支持的操作。\na = 3id(a) # 1531372336type(a) # &lt;class &#x27;int&#x27;&gt;b = &#x27;我爱你&#x27;id(b) # 46806816type(b) # &lt;class &#x27;str&#x27;&gt;\n\n\n变量的声明和赋值变量的声明和赋值用于将一个变量绑定到一个对象上，语法结构如下：\n变量名 = 变量值\n最简单的表达式就是字面量。如：a = 123。运行过程中，解释器先运行右边的表达式，生成一个代表表达式运算结果的对象，然后，将这个对象地址赋值给左边的变量。 \n在python中，声明变量的同时需要为其赋值，否则会报错。\n变量命名\n硬性规则：\n变量名由字母、数字和下划线构成，数字不能开头。\n区分大小写\n变量名不要跟Python语言的关键字和保留字发生重名的冲突。\n\n\n非硬性规则（PEP8）：\n见名知义。\n变量名通常使用小写英文字母，多个单词用下划线进行连接。\n受保护的变量用单个下划线开头。\n私有的变量用两个下划线开头。\n\n\n\n非硬性规则的2和3大家暂时不用理解，后面自然会明白的。\n","tags":["python基础"]},{"title":"Hexo-Github搭建个人博客（上）","url":"/2022/01/30/Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%8A%EF%BC%89/","content":"安装Node.js先下载稳定版（LTS），安装选项选默认（想改路径可以），一路Next。\n安装好之后，按win+R输入cmd打开命令提示符，输入node -v和npm -v，如果出现版本号，则安装就完成了\n安装Git为了把本地文件上传到Github上面去，我们需要分布式版本控制工具———Git\n安装选项还是默认，路径随意，安装完成之后，打开命令提示符，输入git -v，如果不报错，则证明安装成功。\n注册Github账号打开官网，注册流程很简单，注册完成登录。\n注意：网站有时不好使，因为是在国内访问的原因，如果无法打开，则等待几个小时后在去访问，或者有能力的可以了解科学上网（私聊博主可获取秘密武器哦）\n新建一个项目，如图所示：\n\n输入项目名，名称一定要和你的GitHub名字一样，后面要加.github.io，README的初始化最好也点上，如图所示：\n\n安装Hexo在一个合适的地方新建一个文件夹，用来存放自己的博客文件，在该目录下右击，点Git Bash Here，打开git控制台窗口，以后我们所有的操作将都在git控制台进行。在控制台中输入 npm i hexo-cli -g 安装Hexo。\n安装完后输入hexo -v验证是否安装成功。\n然后就要初始化我们的网站，输入hexo init blog初始化文件，接着输入cd blog ，然后输入npm install安装必备的组件。\n这样本地的网站配置也弄好了，输入hexo g生成静态网页，然后输入hexo s打开本地服务器，然后浏览器访问http://localhost:4000/ ，就可以看到我们的熟悉的Hello World了，效果如下：\n\n返回控制台按ctrl+c关闭本地服务器\n连接Github与本地首先在任意地方右击打开 Git Bash Here，然后输入下面的命令：\n\n注意：用户名和邮箱请修改成你GitHub的消息，name和email后有空格\n输入如下命令，按三次回车，然后生成密钥SSH key\n\n然后到上面提示的地址里用记事本打开id_rsa.pub，复制里面的内容\n\n打开GitHub ，头像下面点击Setting，\n\n再点击SSH and GPG keys，新建一个SSH，名字随便起。\n\n然后将记事本复制的内容复制到框中，点击确认保存。\n\n然后到git控制台中输入ssh -T  &#x67;&#105;&#116;&#64;&#103;&#105;&#116;&#104;&#x75;&#98;&#46;&#x63;&#111;&#109;，第一次提示输入yes，然后如果出现你的用户名，那就成功了，如下图示。\n\n配置并上传网站打开博客目录下的**_config.yml**文件，这是博客的配置文件，在这里你可以修改博客的相关信息，现在，只修改最后一行配置：\n\n将respository修改为你自己的GitHub项目地址(ssh)。\n\n然后返回文件夹中右击打开git控制台，输入npm install hexo-deployer-git –save,安装git插件，\n然后输入hexo g和hexo d上传到GitHub上。这是你打开你的io主页就能看到你上传的博客网站了。\n\n绑定域名（没有可忽略，直接用io网址访问即可）想要更换域名，可以自己到卖域名的平台买个域名，XX云都能买。\n\n然后买完之后，点击解析，添加两条解析记录，第二条，主机记录为www，记录类型为CNAME，记录值为你GitHub项目page里的那个地址，然后第一条，主机记录为@，记录类型为A，记录值为你通过命令提示符窗口ping第二条记录值得到的ip！！\n\n\n打开你本地博客目录中source文件夹，新建文本文件，然后在里面写上你的域名，保存，然后重命名删除后缀。最后运行hexo g和hexo d上传到github。\n","tags":["hexo"]},{"title":"python基础第三课-运算符和基础语法","url":"/2022/02/05/python%E5%9F%BA%E7%A1%80%E7%AC%AC%E4%BA%8C%E8%AF%BE-%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","content":"运算符优先级\n\n\n运算符\n描述\n\n\n\n**\n指数\n\n\n~ + -\n按位取反，正负号\n\n\n* / % //\n乘，除，模，整除\n\n\n+ -\n加减\n\n\n&gt;&gt; &lt;&lt;\n右移，左移\n\n\n&amp;\n按位与\n\n\n^  `\n`\n\n\n&lt;= &lt; &gt; &gt;=\n小于等于，小于，大于，大于等于\n\n\n==  !=\n等于，不等于\n\n\nis is not\n身份运算符\n\n\nin not in\n成员运算符\n\n\nnot or and\n逻辑运算符\n\n\n= += -= *= /= %= //= **=\n赋值运算符\n\n\n算术运算符\n乘 —- 两数相乘或是返回一个被重复若干次的字符串\n除 —- 21 / 10 = 2.1\n取模 —- 返回除法的余数\n整除 —- 向下取整 —- 26 // 10 = 2\n\n比较运算符\n等于 —- 比较两个变量的值是否相等（注意与is区分）\n不等于 —- 比较两个变量的值是否不相等\n\n赋值运算符赋值运算符应该是最为常见的运算符，它的作用是将右边的值赋给左边的变量。\na = 10b = 3a += b        # 相当于：a = a + ba *= a + 2    # 相当于：a = a * (a + 2)print(a)      # 算一下这里会输出什么\n\n尽量别使用。\n位运算符\n按位与：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0\n按位或：只要对应的二个二进位有一个为1时，结果位就为1。\n按位异或：当两对应的二进位相异时，结果为1。\n按位反：对数据的每个二进制位取反,即把1变为0,把0变为1。~x 类似于 -x-1\n左移，右移运算符：x&lt;&lt; 4 等同于 x*(2**4)，同样右移是整除\n\n逻辑运算符\nand —- 同为True才返回True，否则返回False\nor —- 同为False才返回False，否则返回True\nnot —- 取反，True变False，False变True\n\n成员运算符\nin —- 如果在指定的序列中找到值返回 True，否则返回 False。\nnot in —- 如果在指定的序列中没有找到值返回 True，否则返回 False。\n\n身份运算符\nis —-is 是判断两个标识符是不是引用自一个对象，是则返回True，不是则是False—-类似于 id(x)==id(y)\nis not —-同理\n\n基础语法保留字不必记，认识就好。\n[&#x27;False&#x27;, &#x27;None&#x27;, &#x27;True&#x27;, &#x27;and&#x27;, &#x27;as&#x27;, &#x27;assert&#x27;, &#x27;break&#x27;, &#x27;class&#x27;, &#x27;continue&#x27;, &#x27;def&#x27;, &#x27;del&#x27;, &#x27;elif&#x27;, &#x27;else&#x27;, &#x27;except&#x27;, &#x27;finally&#x27;, &#x27;for&#x27;, &#x27;from&#x27;, &#x27;global&#x27;, &#x27;if&#x27;, &#x27;import&#x27;, &#x27;in&#x27;, &#x27;is&#x27;, &#x27;lambda&#x27;, &#x27;nonlocal&#x27;, &#x27;not&#x27;, &#x27;or&#x27;, &#x27;pass&#x27;, &#x27;raise&#x27;, &#x27;return&#x27;, &#x27;try&#x27;, &#x27;while&#x27;, &#x27;with&#x27;, &#x27;yield&#x27;]\n\n注释注释符号包括#内容 &quot;&quot;&quot;内容&quot;&quot;&quot; &#39;&#39;&#39;内容&#39;&#39;&#39; \n代码的组织和缩进Python 语言是通过缩进来组织代码块，“缩进”成为了 Python 语法强制的规定。缩进时，几个空格都是允许的，但必须同意，通常采用“四个空格”表示一个缩进，一般等于一个tab键。\n多行语句Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠 \\ 来实现多行语句，例如：\ntotal = item_one + \\        item_two + \\        item_three\n\n在 [], {}, 或 () 中的多行语句，不需要使用反斜杠 \\，例如：\ntotal = [&#x27;item_one&#x27;, &#x27;item_two&#x27;, &#x27;item_three&#x27;,        &#x27;item_four&#x27;, &#x27;item_five&#x27;]\n\n","tags":["python基础"]},{"title":"遇到的坑（1）","url":"/2022/01/30/%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91%EF%BC%881%EF%BC%89/","content":"1.基于Hexo和Github搭建的博客，手机端访问不了，怎么办？因为是在国内，所以无论是访问Github还是Github所提供的服务都是不稳定的。电脑端能访问的原因大概率是因为科学上网的缘故，手机端无法访问是因为其拒绝了域名解析所用的ip地址。\n解决方法：\n重新ping一下你的GitHub项目的地址，打开命令提示符cmd，输入ping 仓库名，如下图：\n\n可以知道当前ip是185.199.109.153\n然后到域名DNS解析中，添加A记录值为上述ping到的ip，到此可以解决了。\n2.Typora（Markdown）可以载入本地图片，而网页无法载入？原因：本地图片是靠相对路径载入的，而当上传网页时，它们的相对路径会发生改变。\n解决方法：\n在blog目录下打开git控制台，安装图片插件，输入npm install hexo-asset-image –save。\n然后打开blog目录下的_config.yml文件，将post_asset_folder改为true。\n然后重新new一个md文件，或者在原md文件处新建一个同名的文件夹来存放照片，将相对路径直接改成照片名，因为当你上传网页时，他们会被放入同一个文件夹。\n\n我也被上述问题困扰了一下午，网上的方法大部分不好使，当然也有提出别的备用方案，如用gitee代替github，采用图床的方法等等，但都不符合我的预期，所以做了这个博客希望能给各位提供帮助。\n","tags":["hexo"]},{"title":"壁纸网站收录","url":"/2022/02/01/%E5%A3%81%E7%BA%B8%E7%BD%91%E7%AB%99%E6%94%B6%E5%BD%95/","content":"该文章整理了小薛白嫖壁纸的超香网站。经典，典中典：wallhaven，这网站已经是众所周知了，是小薛最初壁纸的来源，各种尺寸，各种类型应有尽有，唯一缺点是该网站是英文的有点不友好，特别是对我这样的英语大白菜。\n\n中文网站：wallpaper Abyss,主题分类的搜索也很好，小薛刚从上面拿了张猎魔人的壁纸，直接爱住了。\n\n宝藏：Desktopography，这是一个2005年推出的一个非盈利项目，里面的壁纸真的非常精美，那里的东西适合每个人。\n\nwin风收录站：wallpaperhub，网站收录了win系统的壁纸，和surfcae等壁纸，办公风yyds。\n\n此次分享就这么四个网站，感谢阅读，以后还会收录一些其他类型网站。\n","tags":["网站收录"]}]